---
- name: Deploy kubernetes cluster on Ubuntu Noble
  hosts: all
  become: true
  become_method: sudo
  become_user: root
  tasks:

  - name: Install required packages
    apt:
      name:
        - curl
        - gnupg2
        - software-properties-common
        - apt-transport-https
        - ca-certificates
      state: present
      update_cache: yes

  - name: Install Docker
    apt:
      name: docker.io
      state: present
      update_cache: yes

  - name: Remove Keyrings Directory (if it exists)
    ansible.builtin.shell: rm -rf /etc/apt/keyrings

  - name: Remove Existing Kubernetes Directory (if it exists)
    ansible.builtin.shell: sudo rm -rf /etc/apt/sources.list.d/pkgs_k8s_io_core_stable_v1_30_deb.list

  - name: Disable swap
    ansible.builtin.command:
      cmd: swapoff -a

  - name: Ensure swap is disabled on boot
    ansible.builtin.command:
      cmd: sudo sed -i -e '/\/swap.img\s\+none\s\+swap\s\+sw\s\+0\s\+0/s/^/#/' /etc/fstab

  - name: Add kernel modules for Containerd
    ansible.builtin.copy:
      dest: /etc/modules-load.d/containerd.conf
      content: |
        overlay
        br_netfilter

  - name: Load kernel modules for Containerd
    ansible.builtin.shell:
      cmd: modprobe overlay && modprobe br_netfilter
    become: true

  - name: Add kernel parameters for Kubernetes
    ansible.builtin.copy:
      dest: /etc/sysctl.d/kubernetes.conf
      content: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: Load kernel parameter changes
    ansible.builtin.command:
      cmd: sudo sysctl --system

  - name: Create directory for containerd
    ansible.builtin.command: 
      cmd: sudo mkdir /etc/containerd

  - name: Configuring Containerd (building the configuration file)
    ansible.builtin.command:
      cmd: containerd config default | sudo tee /etc/containerd/config.toml

  - name: Configuring Containerd (Setting SystemdCgroup Variable to True)
    ansible.builtin.command:
      cmd: sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

  - name: Reload systemd configuration
    ansible.builtin.command:
      cmd: systemctl daemon-reload

  - name: Restart containerd service
    ansible.builtin.service:
      name: containerd
      state: restarted

  - name: Prepare keyrings directory and update permissions
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download Kubernetes GPG key securely
    ansible.builtin.shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

  - name: Add Kubernetes repository
    ansible.builtin.apt_repository:
      repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
      state: present

  - name: Install kubeadm, kubelet, kubectl
    ansible.builtin.apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: present
      update_cache: yes

  - name: Hold kubelet, kubeadm, kubectl packages
    ansible.builtin.command:
      cmd: sudo apt-mark hold kubelet kubeadm kubectl

  - name: Reload systemd configuration
    ansible.builtin.command:
      cmd: systemctl daemon-reload

  - name: Restart kubelet service
    ansible.builtin.service:
      name: kubelet
      state: restarted
      
  - name: Enable on start up 
    ansible.builtin.command:
      cmd: sudo systemctl enable --now kubelet  

  - name: Reboot the system
    ansible.builtin.reboot:
      msg: "Reboot initiated by Ansible for Kubernetes setup"
      reboot_timeout: 150

  - name: Replace Docker daemon.json configuration
    ansible.builtin.copy:
      dest: /etc/docker/daemon.json
      content: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }

  - name: Reload systemd configuration
    ansible.builtin.command:
      cmd: systemctl daemon-reload

  - name: Restart Docker service
    ansible.builtin.service:
      name: docker
      state: restarted

  - name: Reload systemd configuration
    ansible.builtin.command:
      cmd: systemctl daemon-reload

  - name: Restart kubelet service
    ansible.builtin.service:
      name: kubelet
      state: restarted

  - name: Pull kubeadm container images
    ansible.builtin.command:
      cmd: sudo kubeadm config images pull

  - name: Initialize Kubernetes control plane
    ansible.builtin.command:
      cmd: kubeadm init --pod-network-cidr=10.0.0.0/23
      creates: /tmp/kubeadm_output
    register: kubeadm_init_output
    become: true
    changed_when: false

  - name: Set permissions for Kubernetes Admin
    file:
      path: /etc/kubernetes/admin.conf
      state: file
      mode: '0755'

  - name: Store Kubernetes initialization output to file
    copy:
      content: "{{ kubeadm_init_output.stdout }}"
      dest: /tmp/kubeadm_output
    become: true
    delegate_to: localhost

  - name: Generate the Join Command
    ansible.builtin.shell: cat /tmp/kubeadm_output | tail -n 2 | sed ':a;N;$!ba;s/\\\n\s*/ /g' > /tmp/join-command
    delegate_to: localhost

  - name: Set permissions for the Join Executable
    file:
      path: /tmp/join-command
      state: file
      mode: '0755'
    delegate_to: localhost